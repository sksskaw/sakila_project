<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.sakila.mapper.SalesMapper">
	<select id="selectBestSellerTop10" resultType="map">
		SELECT f.film_id filmId, f.title, f.rating, COUNT(*) AS cnt
		FROM rental r INNER JOIN inventory i ON r.inventory_id = i.inventory_id
		              INNER JOIN film f ON i.film_id = f.film_id
		GROUP BY f.title
		ORDER BY COUNT(*) DESC
		LIMIT 10
	</select>
	
	<select id="selectSalesByCategoryList" resultType="map">
		SELECT *
		FROM sales_by_film_category
	</select>
	
	<select id="selectmonthlySalesList" resultType="map">
		SELECT
			CONCAT(c.city, _utf8mb4',', cy.country) AS store
			, CONCAT(m.first_name, _utf8mb4' ', m.last_name) AS manager
			, SUM(p.amount) AS total_sales, YEAR(p.payment_date) AS YEAR, 
			MONTH(p.payment_date) AS MONTH, s.store_id storeId
		FROM payment AS p
		INNER JOIN rental AS r ON p.rental_id = r.rental_id
		INNER JOIN inventory AS i ON r.inventory_id = i.inventory_id
		INNER JOIN store AS s ON i.store_id = s.store_id
		INNER JOIN address AS a ON s.address_id = a.address_id
		INNER JOIN city AS c ON a.city_id = c.city_id
		INNER JOIN country AS cy ON c.country_id = cy.country_id
		INNER JOIN staff AS m ON s.manager_staff_id = m.staff_id
		GROUP BY s.store_id, MONTH(p.payment_date)
		ORDER BY p.payment_date
	</select>
	
	<select id="selectTotalSales" resultType="int">
		SELECT SUM(total_sales)
		FROM sales_by_store
	</select>
	
	<select id="selectTodaySales" resultType="int">
		SELECT CASE WHEN SUM(amount) IS NULL THEN 0 ELSE SUM(amount) END as SUM
		FROM payment
		WHERE DATE(payment_date) = DATE(NOW())
	</select>

	<select id="selectTodayRental" resultType="int">
		SELECT COUNT(*)
		FROM rental
		WHERE DATE(rental_date) = DATE(NOW())
	</select>
	
	<select id="selectRentalsCount" resultType="int">
		SELECT COUNT(*)
		FROM rental
		WHERE return_date IS NULL
	</select>
	
	<select id="selectOverdueCount" resultType="int">
		SELECT COUNT(*)
		FROM rental r INNER JOIN inventory i ON r.inventory_id = i.inventory_id
		              INNER JOIN film f ON i.film_id = f.film_id
		WHERE r.return_date IS NULL AND DATEDIFF(NOW(), r.rental_date) > f.rental_duration
	</select>
</mapper>
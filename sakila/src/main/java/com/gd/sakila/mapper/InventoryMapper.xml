<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.sakila.mapper.InventoryMapper">

	<delete id="deleteInventory" parameterType="int">
		DELETE FROM inventory WHERE inventory_id = #{inventoryId}
	</delete>

	<insert id="insertInventory" parameterType="map">
		INSERT INTO inventory(film_id,store_id) 
			 VALUES(#{filmId}, #{storeId})
	</insert>

	<select id="selectInventoryList" parameterType="map" resultType="map">
		SELECT i.store_id storeId, f.title, f.film_id filmId,  COUNT(DISTINCT i.inventory_id) AS totalInventory
               ,COUNT(CASE WHEN (r.return_date IS NULL AND r.inventory_id IS NOT NULL) THEN 1 END) AS rental
		       ,(COUNT(DISTINCT i.inventory_id) 
		        - COUNT(CASE WHEN (r.return_date IS NULL AND r.inventory_id IS NOT NULL) THEN 1 END)) AS stock
		FROM film f INNER JOIN inventory i ON f.film_id = i.film_id
		            LEFT JOIN rental r ON i.inventory_id = r.inventory_id
		<where>
			<if test="searchWord != null">
				f.title LIKE CONCAT('%',#{searchWord},'%')
			</if>
			<if test="storeId != null">
        		AND i.store_id = #{storeId}
			</if>
		</where>
		GROUP BY i.film_id, i.store_id
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<select id="selectInventoryListTotal" parameterType="map" resultType="int">

		SELECT count(DISTINCT(i.film_id))
		FROM film f, inventory i
		WHERE f.film_id = i.film_id
			<if test="searchWord != null">
				AND f.title LIKE CONCAT('%',#{searchWord},'%')
			</if>
			<if test="storeId != null">
        		AND i.store_id = #{storeId}
			</if>
	</select>
	
	<select id="selectCanRentalList" parameterType="int" resultType="map">
	SELECT i.inventory_id inventoryId, i.store_id storeId, f.title
	  FROM inventory i INNER JOIN film f ON i.film_id = f.film_id
	 WHERE inventory_id NOT IN(SELECT inventory_id
									  FROM rental
									  WHERE return_date IS NULL
									  ORDER BY inventory_id)
		   AND f.film_id = #{filmId}
	
	</select>
</mapper>